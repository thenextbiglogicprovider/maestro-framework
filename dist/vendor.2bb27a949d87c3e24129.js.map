{"version":3,"sources":["webpack:///vendor.2bb27a949d87c3e24129.js","webpack:///webpack/bootstrap 01268f2148d3ab030da1","webpack:///./src/vendor.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","0","appendChild","m","c","_interopRequireDefault","obj","__esModule","default","_whatwgFetch","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","done","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","get","set","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","fetch","list","values","getAll","has","hasOwnProperty","thisArg","keys","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"vendor.2bb27a949d87c3e24129.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/ \t\tif(moreModules[0]) {\n/******/ \t\t\tinstalledModules[0] = 0;\n/******/ \t\t\treturn __webpack_require__(0);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"430fc541de042c128b1a\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _whatwgFetch = __webpack_require__(4);\n\t\n\tvar _whatwgFetch2 = _interopRequireDefault(_whatwgFetch);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return;\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && function () {\n\t      try {\n\t        new Blob();\n\t        return true;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  };\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name);\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name');\n\t    }\n\t    return name.toLowerCase();\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value);\n\t    }\n\t    return value;\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function next() {\n\t        var value = items.shift();\n\t        return { done: value === undefined, value: value };\n\t      }\n\t    };\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function () {\n\t        return iterator;\n\t      };\n\t    }\n\t\n\t    return iterator;\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {};\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function (value, name) {\n\t        this.append(name, value);\n\t      }, this);\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function (name) {\n\t        this.append(name, headers[name]);\n\t      }, this);\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function (name, value) {\n\t    name = normalizeName(name);\n\t    value = normalizeValue(value);\n\t    var list = this.map[name];\n\t    if (!list) {\n\t      list = [];\n\t      this.map[name] = list;\n\t    }\n\t    list.push(value);\n\t  };\n\t\n\t  Headers.prototype['delete'] = function (name) {\n\t    delete this.map[normalizeName(name)];\n\t  };\n\t\n\t  Headers.prototype.get = function (name) {\n\t    var values = this.map[normalizeName(name)];\n\t    return values ? values[0] : null;\n\t  };\n\t\n\t  Headers.prototype.getAll = function (name) {\n\t    return this.map[normalizeName(name)] || [];\n\t  };\n\t\n\t  Headers.prototype.has = function (name) {\n\t    return this.map.hasOwnProperty(normalizeName(name));\n\t  };\n\t\n\t  Headers.prototype.set = function (name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)];\n\t  };\n\t\n\t  Headers.prototype.forEach = function (callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function (name) {\n\t      this.map[name].forEach(function (value) {\n\t        callback.call(thisArg, value, name, this);\n\t      }, this);\n\t    }, this);\n\t  };\n\t\n\t  Headers.prototype.keys = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {\n\t      items.push(name);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.values = function () {\n\t    var items = [];\n\t    this.forEach(function (value) {\n\t      items.push(value);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.entries = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {\n\t      items.push([name, value]);\n\t    });\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'));\n\t    }\n\t    body.bodyUsed = true;\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function (resolve, reject) {\n\t      reader.onload = function () {\n\t        resolve(reader.result);\n\t      };\n\t      reader.onerror = function () {\n\t        reject(reader.error);\n\t      };\n\t    });\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader();\n\t    reader.readAsArrayBuffer(blob);\n\t    return fileReaderReady(reader);\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader();\n\t    reader.readAsText(blob);\n\t    return fileReaderReady(reader);\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false;\n\t\n\t    this._initBody = function (body) {\n\t      this._bodyInit = body;\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body;\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body;\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body;\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString();\n\t      } else if (!body) {\n\t        this._bodyText = '';\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type');\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type);\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t        }\n\t      }\n\t    };\n\t\n\t    if (support.blob) {\n\t      this.blob = function () {\n\t        var rejected = consumed(this);\n\t        if (rejected) {\n\t          return rejected;\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob);\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob');\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]));\n\t        }\n\t      };\n\t\n\t      this.arrayBuffer = function () {\n\t        return this.blob().then(readBlobAsArrayBuffer);\n\t      };\n\t\n\t      this.text = function () {\n\t        var rejected = consumed(this);\n\t        if (rejected) {\n\t          return rejected;\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob);\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text');\n\t        } else {\n\t          return Promise.resolve(this._bodyText);\n\t        }\n\t      };\n\t    } else {\n\t      this.text = function () {\n\t        var rejected = consumed(this);\n\t        return rejected ? rejected : Promise.resolve(this._bodyText);\n\t      };\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function () {\n\t        return this.text().then(decode);\n\t      };\n\t    }\n\t\n\t    this.json = function () {\n\t      return this.text().then(JSON.parse);\n\t    };\n\t\n\t    return this;\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase();\n\t    return methods.indexOf(upcased) > -1 ? upcased : method;\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {};\n\t    var body = options.body;\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read');\n\t      }\n\t      this.url = input.url;\n\t      this.credentials = input.credentials;\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers);\n\t      }\n\t      this.method = input.method;\n\t      this.mode = input.mode;\n\t      if (!body) {\n\t        body = input._bodyInit;\n\t        input.bodyUsed = true;\n\t      }\n\t    } else {\n\t      this.url = input;\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit';\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers);\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET');\n\t    this.mode = options.mode || this.mode || null;\n\t    this.referrer = null;\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests');\n\t    }\n\t    this._initBody(body);\n\t  }\n\t\n\t  Request.prototype.clone = function () {\n\t    return new Request(this);\n\t  };\n\t\n\t  function decode(body) {\n\t    var form = new FormData();\n\t    body.trim().split('&').forEach(function (bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=');\n\t        var name = split.shift().replace(/\\+/g, ' ');\n\t        var value = split.join('=').replace(/\\+/g, ' ');\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value));\n\t      }\n\t    });\n\t    return form;\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers();\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n');\n\t    pairs.forEach(function (header) {\n\t      var split = header.trim().split(':');\n\t      var key = split.shift().trim();\n\t      var value = split.join(':').trim();\n\t      head.append(key, value);\n\t    });\n\t    return head;\n\t  }\n\t\n\t  Body.call(Request.prototype);\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {};\n\t    }\n\t\n\t    this.type = 'default';\n\t    this.status = options.status;\n\t    this.ok = this.status >= 200 && this.status < 300;\n\t    this.statusText = options.statusText;\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);\n\t    this.url = options.url || '';\n\t    this._initBody(bodyInit);\n\t  }\n\t\n\t  Body.call(Response.prototype);\n\t\n\t  Response.prototype.clone = function () {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    });\n\t  };\n\t\n\t  Response.error = function () {\n\t    var response = new Response(null, { status: 0, statusText: '' });\n\t    response.type = 'error';\n\t    return response;\n\t  };\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308];\n\t\n\t  Response.redirect = function (url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code');\n\t    }\n\t\n\t    return new Response(null, { status: status, headers: { location: url } });\n\t  };\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function (input, init) {\n\t    return new Promise(function (resolve, reject) {\n\t      var request;\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input;\n\t      } else {\n\t        request = new Request(input, init);\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL;\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL');\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function () {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        };\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options));\n\t      };\n\t\n\t      xhr.onerror = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.ontimeout = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.open(request.method, request.url, true);\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true;\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob';\n\t      }\n\t\n\t      request.headers.forEach(function (value, name) {\n\t        xhr.setRequestHeader(name, value);\n\t      });\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n\t    });\n\t  };\n\t  self.fetch.polyfill = true;\n\t})(typeof self !== 'undefined' ? self : undefined);\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** vendor.2bb27a949d87c3e24129.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"430fc541de042c128b1a\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 01268f2148d3ab030da1\n **/","\n/* eslint-disable no-unused-vars*/\nimport fetch from \"whatwg-fetch\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/whatwg-fetch/fetch.js\n **/"],"sourceRoot":""}